FROM nvidia/cuda:11.2.0-devel-ubuntu20.04  

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        cmake \
        curl \
        git \
        libtbb-dev \
    && apt-get clean

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8

ENV PATH /opt/conda/bin:$PATH

CMD [ "/bin/bash" ]

# Leave these args here to better use the Docker build cache
ENV CONDA_VERSION=py38_4.9.2
ENV CONDA_MD5=122c8c9beb51e124ab32a0fa6426c656

RUN curl -s https://repo.anaconda.com/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh -o miniconda.sh && \
    echo "${CONDA_MD5}  miniconda.sh" > miniconda.md5 && \
    if ! md5sum --status -c miniconda.md5; then exit 1; fi && \
    mkdir -p /opt && \
    sh miniconda.sh -b -p /opt/conda && \
    rm miniconda.sh miniconda.md5 && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    /opt/conda/bin/conda clean -afy

#    curl -fsSL https://micromamba.snakepit.net/api/micromamba/linux-64/latest | \
#    tar -xvj bin/micromamba && \
#    micromamba shell init -s bash -p ~/micromamba
#
WORKDIR /opt

# Make RUN commands use `bash --login`: -- fixes conda init
# https://pythonspeed.com/articles/activate-conda-dockerfile/
SHELL ["/bin/bash", "--login", "-c"]

# Create the environment
COPY environment-nohoomd.yml ./

# Install in base environment
RUN conda env update -n base -f environment-nohoomd.yml && \
    conda clean --all --yes -f 

# Prevent python from loading packages from outside the container
# default empty pythonpath
ENV PYTHONPATH /ignore/pythonpath

# Install HOOMD
ENV HOOMD_TAG=v2.9.4

RUN git clone --recursive https://github.com/glotzerlab/hoomd-blue.git && \
    cd hoomd-blue && \
    git checkout $HOOMD_TAG && \
    git submodule update && \
    mkdir build && \
    cd build && \
    cmake ../ -DENABLE_MPI=OFF \
              -DENABLE_CUDA=ON \
              -DPYTHON_EXECUTABLE=$(command -v python) \
              -DCMAKE_C_COMPILER=$(command -v gcc) \
              -DCMAKE_CXX_COMPILER=$(command -v g++) \
              -DCMAKE_INSTALL_PREFIX=$(python -c "import site; print(site.getsitepackages()[0])") \
              -DBUILD_HPMC=OFF \
              -DBUILD_JIT=OFF \ 
              -DBUILD_METAL=OFF \ 
              -DBUILD_DEM=OFF \
              -DBUILD_CGCMM=OFF \
              -DBUILD_MPCD=OFF \
              -DSINGLE_PRECISION=ON && \
    make && \
    make install

